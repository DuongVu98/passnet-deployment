---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: organizer-sa
automountServiceAccountToken: true
---
apiVersion: consul.hashicorp.com/v1alpha1
kind: ServiceDefaults
metadata:
  name: organizer-sd
spec:
  protocol: "http"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configmap
data:
  config: |
    # /etc/nginx/conf.d/default.conf
    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        # Proxy pass the api location to save CORS
        # Use location exposed by Consul connect
        location /api {
            proxy_pass http://127.0.0.1:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: passnet-organizer-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      backend: passnet_organizer_service
  template:
    metadata:
      annotations:
        consul.hashicorp.com/connect-inject: "true"
        consul.hashicorp.com/connect-service-upstreams: "public-api:8080"
        consul.hashicorp.com/enable-metrics-merging: "false"
      name: passnet-organizer-service
      labels:
        backend: passnet_organizer_service
    spec:
      serviceAccountName: organizer-sa
      volumes:
      - name: config
        configMap:
          name: nginx-configmap
          items:
          - key: config
            path: default.conf
      containers:
        - name: passnet-organizer-service
          image: tony16019/passnet-organizer
          ports:
            - name: rest
              containerPort: 8084
            - name: grpc
              containerPort: 7074
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/conf.d
              readOnly: true
          env:
            - name: PROFILE
              value: "prod"
            - name: SERVER_PORT_LISTENER
              value: "8084"
            - name: DATABASE_URL
              value: jdbc:mysql://passnet-db.capqjrg9dqzh.ap-southeast-1.rds.amazonaws.com:3306/passnet_organizer_db
            - name: DATABASE_USERNAME
              value: "admin"
            - name: DATABASE_PASSWORD
              value: "tungduong98"
            - name: GRPC_PORT_LISTENER
              value: "7074"
            - name: ORGANIZER_SAGA_ADDRESS
              value: "passnet-organizer-cluster-ip:6164"
          resources:
            limits:
              memory: "1Gi"
              cpu: "1"

        # - name: passet-organizer-saga
        #   image: tony16019/passnet-organizer-saga
        #   ports:
        #     - name: saga-grpc
        #       containerPort: 6164
        #   env:
        #     - name: PROFILE
        #       value: "prod"
        #     - name: ORGANIZER_SERVICE_GRPC_ADDRESS
        #       value: "passnet-organizer-cluster-ip:7074"
        #     - name: ORGANIZER_SAGA_PORT
        #       value: "6164"
        #   resources:
        #     limits:
        #       memory: "1Gi"
        #       cpu: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: passnet-organizer-cluster-ip
spec:
  type: ClusterIP
  selector:
    backend: passnet_organizer_service
  ports:
    - name: organizer-service-rest
      port: 8084
      targetPort: rest
    - name: organizer-service-grpc
      port: 7074
      targetPort: grpc
    - name: organizer-saga-grpc
      port: 6164
      targetPort: saga-grpc
